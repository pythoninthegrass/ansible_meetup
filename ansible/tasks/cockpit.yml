# code: language=ansible

---
- hosts: all
  become: true
  gather_facts: true
  any_errors_fatal: true
  roles:
    - role: pre-tasks
      tags: pre
  tasks:
    - name: Get OS codename
      ansible.builtin.set_fact:
        codename: "{{ ansible_distribution_release }}"
      when: ansible_os_family == 'Debian'

    - name: |
        Setup official backports package by codename]
        DESC [Install from backports repository. See: https://cockpit-project.org/running.html#ubuntu
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
        default_release: "{{ codename }}-backports"
        update_cache: true
        cache_valid_time: 3600
      with_items:
        - cockpit
      changed_when: false
      when: ansible_os_family == 'Debian'

    - name: Install Red Hat cockpit packages
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
      with_items:
        - cockpit
      when: ansible_os_family == 'RedHat'

    - name: Install additional cockpit packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: present
      with_items:
        - cockpit-machines

    - name: Start and enable cockpit
      ansible.builtin.systemd:
        name: cockpit.socket
        state: started
        enabled: true

    - name: Gather service facts
      ansible.builtin.service_facts:

    - name: Check if firewalld is installed
      ansible.builtin.set_fact:
        firewalld_status: >-
          {{
            (ansible_facts.services['firewalld'].state
            if 'firewalld' in ansible_facts.services else 'not_installed')
            if ansible_facts.services is defined else 'not_installed'
          }}

    # TODO: verify firewalld_status returns 'running' when enabled
    # * technically works when not installed
    - name: Open firewall ports for Cockpit
      ansible.builtin.firewalld:
        service: cockpit
        permanent: true
        state: enabled
      when: firewalld_status == 'running'
