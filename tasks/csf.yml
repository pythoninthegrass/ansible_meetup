# code: language=ansible

---
- hosts: all
  become: true
  gather_facts: false
  any_errors_fatal: true
  vars:
    apply_csf_template: true
    tcp_in: "9090,10000"
    tcp_out: "9090,10000"
    # udp_in: "9090"
    # udp_out: "9090"
  tasks:
    - name: Gather minimal facts
      ansible.builtin.setup:
        gather_subset:
          - '!all'
          - '!any'
          - 'distribution'

    - name: Disable firewalld and install required packages
      block:
        - name: Disable firewalld
          ansible.builtin.systemd:
            name: firewalld
            state: stopped
            enabled: no

        - name: Install required packages
          ansible.builtin.dnf:
            name: perl
            state: present
      when: ansible_facts['distribution'] == 'CentOS' or ansible_facts['distribution'] == 'RedHat'

    - name: Check if CSF is already installed
      ansible.builtin.stat:
        path: /usr/sbin/csf
      register: csf_binary

    - name: Install CSF
      block:
        - name: Download and extract CSF tarball
          ansible.builtin.unarchive:
            src: https://download.configserver.com/csf.tgz
            dest: /usr/src/
            remote_src: yes

        - name: Install CSF
          ansible.builtin.command:
            cmd: sh install.sh
            chdir: /usr/src/csf
      when: not csf_binary.stat.exists

    - name: Configure CSF
      block:
        - name: Apply CSF configuration template
          ansible.builtin.template:
            src: "{{ playbook_dir }}/templates/csf.conf.j2"
            dest: /etc/csf/csf.conf
            owner: root
            group: root
            mode: '0644'
            backup: yes
          when: apply_csf_template | default(true)
          register: csf_conf_result

        - name: Read current TCP_IN and TCP_OUT ports
          ansible.builtin.shell:
            cmd: "grep '^{{ item }} = ' /etc/csf/csf.conf | cut -d '\"' -f 2"
          loop:
            - TCP_IN
            - TCP_OUT
          register: current_ports
          changed_when: false
          check_mode: no

        - name: Update TCP_IN and TCP_OUT in csf.conf
          ansible.builtin.lineinfile:
            path: /etc/csf/csf.conf
            regexp: "^{{ item.key }} = "
            line: '{{ item.key }} = "{{ item.value }}"'
          loop:
            - key: TCP_IN
              value: >-
                {{
                  ((current_ports.results[0].stdout | default('') + ',' + tcp_in)
                  .split(',')
                  | unique
                  | map('int')
                  | sort
                  | map('string')
                  | join(','))
                }}
            - key: TCP_OUT
              value: >-
                {{
                  ((current_ports.results[1].stdout | default('') + ',' + tcp_out)
                  .split(',')
                  | unique
                  | map('int')
                  | sort
                  | map('string')
                  | join(','))
                }}
          when: item.value | length > 0
          register: csf_ports_updated

        - name: Disable CSF testing mode
          ansible.builtin.lineinfile:
            path: /etc/csf/csf.conf
            regexp: '^TESTING\s*='
            line: 'TESTING = "0"'
          register: csf_testing_mode

    - name: Manage CSF and LFD services
      block:
        - name: Ensure CSF and LFD services are started and enabled
          ansible.builtin.systemd:
            name: "{{ item }}"
            state: started
            enabled: yes
          loop:
            - csf
            - lfd

        - name: Restart CSF and LFD services if needed
          ansible.builtin.systemd:
            name: "{{ item }}"
            state: restarted
          loop:
            - csf
            - lfd
          when: csf_testing_mode.changed or csf_conf_result.changed or csf_ports_updated.changed

    - name: Run CSF test and check version
      block:
        - name: Run CSF test
          ansible.builtin.command:
            cmd: perl /usr/local/csf/bin/csftest.pl
          register: csf_test
          changed_when: false

        - name: Check CSF version
          ansible.builtin.command:
            cmd: csf -v
          register: csf_version
          changed_when: false

        - name: Display CSF test results and version
          ansible.builtin.debug:
            msg:
              - "CSF Test Results:"
              - "{{ csf_test.stdout_lines }}"
              - "CSF Version:"
              - "{{ csf_version.stdout_lines }}"
