---
- name: Setup LunarVim
  hosts: all
  gather_facts: true
  become: false
  vars:
    npm_global_dir: "{{ ansible_env.HOME }}/.npm-global"
  environment:
    PATH: "{{ ansible_env.HOME }}/.cargo/bin:{{ npm_global_dir }}/bin:{{ ansible_env.PATH }}"
  tasks:
    - name: Add Neovim unstable PPA (Ubuntu)
      ansible.builtin.apt_repository:
        repo: ppa:neovim-ppa/unstable
      become: true
      when: ansible_os_family == "Debian"

    - name: Update apt cache (Ubuntu)
      ansible.builtin.apt:
        update_cache: yes
      become: true
      when: ansible_os_family == "Debian"

    - name: Install Neovim dependencies (Fedora)
      ansible.builtin.dnf:
        name:
          - nodejs
          - libstdc++-static
          - gcc-c++
        state: present
      become: true
      when: ansible_os_family == "RedHat"

    - name: Install common dependencies
      ansible.builtin.package:
        name:
          - git
          - make
          - neovim
          - nodejs
          - npm
          - pip
          - python3
          - ripgrep
        state: present
      become: true

    - name: Create ~/.local/share directory and set permissions
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/.local/share"
        state: directory
        mode: '0755'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      become: true

    - name: Download rustup installer
      ansible.builtin.get_url:
        url: https://sh.rustup.rs
        dest: /tmp/rustup.sh
        mode: '0755'

    - name: Install rustup
      ansible.builtin.command:
        cmd: /tmp/rustup.sh -y
      args:
        creates: "{{ ansible_user_dir }}/.cargo/bin/rustup"

    - name: Install latest stable Rust
      ansible.builtin.shell: |
        source "{{ ansible_user_dir }}/.cargo/env"
        rustup install stable
      args:
        creates: "{{ ansible_user_dir }}/.cargo/bin/rustc"

    - name: Install code-minimap
      ansible.builtin.shell: cargo install --locked code-minimap
      args:
        creates: "{{ ansible_user_dir }}/.cargo/bin/code-minimap"

    - name: Create npm global directory
      ansible.builtin.file:
        path: "{{ npm_global_dir }}"
        state: directory
        mode: '0755'

    - name: Set npm global prefix
      ansible.builtin.shell: npm config set prefix {{ npm_global_dir }}
      args:
        creates: "{{ ansible_user_dir }}/.npmrc"

    - name: Add NPM_GLOBAL to .bashrc
      ansible.builtin.lineinfile:
        path: "{{ ansible_user_dir }}/.bashrc"
        line: 'export NPM_GLOBAL="{{ npm_global_dir }}/bin"'
        state: present

    - name: Install npm globally
      ansible.builtin.npm:
        name: npm
        global: yes

    - name: Download LunarVim installer
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/install.sh
        dest: /tmp/lunarvim_installer.sh
        mode: '0755'

    - name: |
        Install LunarVim]
        DESC [Install LunarVim with official script. NOTE: this takes a few minutes
      ansible.builtin.command:
        cmd: /tmp/lunarvim_installer.sh -y
      args:
        chdir: /tmp
        creates: "{{ ansible_user_dir }}/.local/bin/lvim"
      environment:
        LV_BRANCH: 'release-1.4/neovim-0.9'
      become: true
      become_user: "{{ ansible_user }}"
      become_method: sudo
