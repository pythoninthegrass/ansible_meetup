# code: language=ansible

---
- hosts: all
  become: false
  gather_facts: true
  any_errors_fatal: true
  vars_files:
    - vars/all.yml
  environment:
    EDITOR: vim
  pre_tasks:
    - name: Get running ansible user
      ansible.builtin.set_fact:
        local_user: "{{ ansible_facts['ansible_env']['SUDO_USER'] | default(ansible_user) }}"
        work_dir: "{{ playbook_dir | default(ansible_facts['ansible_env']['PWD']) }}"
        cacheable: true
      tags: pre

    - name: Get ansible user home
      ansible.builtin.shell: echo ~{{ local_user }}
      register: home_dir
      changed_when: false
      check_mode: false
      tags: pre

    - name: Set home_dir fact
      ansible.builtin.set_fact:
        home_dir: "{{ home_dir.stdout }}"
      tags: pre

    - name: Top-level directory in project
      ansible.builtin.shell: |
        cd "{{ playbook_dir | dirname }}"
        if [ -d .git ]; then
          git rev-parse --show-toplevel
        else
          echo "{{ playbook_dir | dirname }}"
        fi
      register: tld
      ignore_errors: true
      tags: pre

    - name: Set tld stdout fact
      ansible.builtin.set_fact:
        tld: "{{ tld.stdout }}"
      tags: pre

    - name: Get OS release
      ansible.builtin.set_fact:
        os_release: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}"
        major_ver: "{{ ansible_distribution_major_version }}"
        distro: "{{ ansible_distribution }}"
      tags: pre

    - name: Install debian dependencies
      ansible.builtin.package:
        name:
        - nfs-kernel-server
        state: present
      become: true
      when: ansible_os_family == "Debian"
      tags: pre
  tasks:
    - name: Create mount directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "{{ permission }}"
      with_items:
        - "{{ mountpoint }}"
      become: true

    - name: Mount an NFS volume
      ansible.posix.mount:
        src: "{{ mynfs }}"
        path: "{{ mountpoint }}"
        fstype: nfs
        opts: "{{ myopts }}"
        dump: 0
        passno: 0
        state: mounted
        backup: true
      become: true
